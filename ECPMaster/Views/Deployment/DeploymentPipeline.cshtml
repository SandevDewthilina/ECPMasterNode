@{
    ViewData["Title"] = "Deployment Pipeline";
    Layout = "_Layout";
}

@section Styles
{
    <link rel="stylesheet" href="~/css/deployment-pipeline/deployment-pipeline.css"/>
    <link rel="stylesheet" href="~/css/my-dropdown.css/my-dropdown.css"/>
}

@using ECPMaster.Entities
@model ECPMaster.ViewModels.DeploymentViewModel

<div class="container">
<section>
    <div class="page-main-header">Deployment pipeline</div>
    <div class="page-sub-header">
        Build and deploy a system from current artifacts
    </div>
</section>
<section class="mt-2 main-page-content">
<div class="col-sm-10">
<form method="post">
<div class="d-flex justify-content-end">
    <button class="my-btn mr-2">Cancel</button>
    <button class="my-btn-danger" type="submit">Execute deployment</button>
</div>
<!-- deployment overview -->
<div class="my-card mt-3">
    <div class="my-card-header">Deployment overview</div>
    <div class="my-card-body">
        <div
            class="d-flex justify-content-center"
            style="font-weight: 600; font-size: 12px">
            <div class="d-flex flex-column align-items-end">
                <div>Deployment Server</div>
                <div>IPv4</div>
                <div>Port</div>
                <div>Artifact name</div>
                <div>System name</div>
                <div>Expose port rule</div>
                <div>Subdomain</div>
            </div>
            <div class="vertical-ruler"></div>
            <div
                class="d-flex flex-column align-items-start"
                style="font-weight: 500">
                <div>aws-88-server</div>
                <div>88.123.23.4</div>
                <div>8100</div>
                <div>lankem_uat</div>
                <div>lankem_test_v2</div>
                <div>0.0.0.0:8100</div>
                <div>lankem.evisionmicro.com</div>
            </div>
        </div>
    </div>
</div>
<!-- deployment overview end -->
<!-- server selection -->
<div class="my-card mt-5">
    <div class="my-card-header">Select an environment</div>
    <div class="my-card-body">
        <small style="color: #5d5f5f; font-weight: 600">
            Choose a deployment server
        </small
        >
        <input type="hidden" id="serverIdentifierInput" asp-for="NodeId">
        <div class="d-flex flex-wrap">
            @if (Model.Nodes != null && Model.Nodes.Any())
            {
                @foreach (var node in Model.Nodes)
                {
                    <!-- server item -->
                    <div class="server-container" id="servercontainer-@node.Id" onclick="fillHiddenInput('@node.Id')">
                        <div
                            class="server-container-left d-flex flex-column align-items-center justify-content-between mr-1">
                            <div>
                                <div style="font-size: 14px; font-weight: 900">
                                    @node.NodeIdentifier
                                </div>
                                <div
                                    style="
                            font-size: 12px;
                            font-weight: 500;
                            color: #232f3e;
                          ">
                                    IPv4: @node.IPv4
                                </div>
                            </div>
                        </div>
                        <div
                            class="server-container-right d-flex justify-content-center align-items-center ml-3">
                            @if (node.NodeState.Equals(AgentState.Available))
                            {
                                <div
                                    class="d-flex justify-content-center"
                                    style=" color: #266f16; font-size: 12px; font-weight: 900;">
                                    <i class="far fa-check-circle mr-1"></i>@node.NodeState
                                </div>
                            }
                            else
                            {
                                <div
                                    class="d-flex justify-content-center"
                                    style=" color: #CA2E2E; font-size: 12px; font-weight: 900;">
                                    <i class="far fa-check-circle mr-1"></i>@node.NodeState
                                </div>
                            }
                        </div>
                    </div>
                    <!-- server item end -->
                }
            }
        </div>
    </div>
</div>
<!-- server selection end -->

<!-- .Net core setup -->
<div class="my-card mt-5">
    <div class="my-card-header">Configure deployment system</div>
    <div class="my-card-body">
        <div class="col-sm-8">
            <div class="my-input-label mb-1">System name</div>
            <input
                class="form-control"
                type="text"
                asp-for="SystemName"
                placeholder="e.g. lankem_uat_system"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *Unique identifier for the Deployment
            </div>

            <div class="my-input-label mb-1">Select artifact</div>
            <!-- Your custom dropdown container -->
            <div class="custom-dropdown d-flex">
                <input
                    class="dropdown-btn form-control"
                    asp-for="ArtifactName"
                    placeholder="Select an option"/>
                <ul class="dropdown-content">
                    <input
                        type="text"
                        class="search-input form-control"
                        placeholder="Search..."/>
                    <!-- options -->
                    @foreach (var artifacts in Model.Artifacts)
                    {
                        <li value="@artifacts.Name">
                            <div class="d-flex flex-column">
                                <div style="font-weight: 600; font-size: 12px">
                                    @artifacts.Name
                                </div>
                                <div style="font-size: 10px">
                                    ID: @artifacts.Id
                                </div>
                                <div style="font-size: 10px">
                                    Tags: @artifacts.Tag
                                </div>
                                <div style="font-size: 10px">
                                    Description: @artifacts.Url
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
<!-- .net core setup end -->
<!-- environment variables setup -->
<div class="my-card mt-5">
    <div class="my-card-header">Configure variables</div>
    <div class="my-card-body">
        <div class="col-sm-8">
            <div class="my-input-label mb-1">Expose Port rule</div>
            <input
                class="form-control"
                type="text"
                asp-for="SystemPort"
                placeholder="e.g. 0.0.0.0:8100"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *Unique identifier for the system
            </div>

            <div class="my-input-label mb-1">MySQL Port</div>
            <input
                class="form-control"
                type="text"
                asp-for="MySqlPort"
                placeholder="e.g. 0.0.0.0:8100"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *Unique port for the mysql instance
            </div>

            <div class="my-input-label mb-1">MySQL User</div>
            <input
                class="form-control"
                type="text"
                asp-for="MySqlUser"
                placeholder="e.g. root"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *Username of the mysql database
            </div>

            <div class="my-input-label mb-1">MySQL Password</div>
            <input
                class="form-control"
                type="password"
                asp-for="MySqlPassword"
                placeholder="e.g. xxxx"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *Password of the mysql database
            </div>

            <div class="my-input-label mb-1">DB Name</div>
            <input
                class="form-control"
                type="text"
                asp-for="DbName"
                placeholder="e.g. golden_copy.sql"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *Name for the db
            </div>

            <div class="my-input-label mb-1">DB Backup File name</div>
            <input
                class="form-control"
                type="text"
                asp-for="DbBackupFileName"
                placeholder="e.g. golden_copy.sql"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *SQL file name for the db backup
            </div>

            <div class="my-input-label mb-1">
                Exposing subdomain (Optional)
            </div>
            <input
                class="form-control"
                asp-for="SubDomain"
                type="text"
                placeholder="e.g. subname.evisionmicro.com"/>
            <div class="my-input-footer-label mb-2 mt-1">
                *This will add a cloudflare DNS record
            </div>
        </div>
    </div>
</div>
<!-- environment variables setup end -->
</form>
</div>
</section>
</div>

@section Scripts
{
    <script src="~/js/my-dropdown.js"></script>
    <script>
        var previousClickedContainer = null;
        function fillHiddenInput(identifier) {
            // Retrieve the hidden input element
            var hiddenInput = document.getElementById('serverIdentifierInput');
            var serverContainer = document.getElementById('servercontainer-' + identifier);
             if (previousClickedContainer !== null) {
                    previousClickedContainer.classList.remove('clicked');
                }
            // Set the value of the hidden input to the server identifier
            hiddenInput.value = identifier;
            serverContainer.classList.toggle('clicked');
             previousClickedContainer = serverContainer;
        }
    </script>
}